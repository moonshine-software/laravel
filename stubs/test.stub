<?php

namespace Tests\Feature;

use {namespace}\DummyResource;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Contracts\Auth\Authenticatable;
use MoonShine\Laravel\Models\MoonshineUser;
use {model-namespace};
use MoonShine\Laravel\Resources\ModelResource;
use PHPUnit\Framework\Attributes\Test;
use Tests\TestCase;

class DummyResourceTest extends TestCase
{
    use RefreshDatabase;

    protected ModelResource $resource;

    protected Authenticatable|MoonshineUser $user;

    protected function setUp(): void
    {
        parent::setUp();

        $this->resource = new DummyResource();

        $user = MoonshineUser::factory()->create();

        $this->be($user, 'moonshine');
    }

    protected function getResource(): ModelResource
    {
        return $this->resource;
    }

    protected function getUser(): Authenticatable|MoonshineUser
    {
        return $this->user;
    }

    #[Test]
    public function index_page_successful(): void
    {
        $response = $this->get(
            $this->getResource()->getIndexPageUrl()
        );

        $response->assertSuccessful();
    }

    #[Test]
    public function detail_page_successful(): void
    {
        $item = {model}::factory()->create();

        $response = $this->get(
            $this->getResource()->getDetailPageUrl($item)
        );

        $response->assertSuccessful();
    }

    #[Test]
    public function create_page_successful(): void
    {
        $response = $this->get(
            $this->getResource()->getFormPageUrl()
        );

        $response->assertSuccessful();
    }

    #[Test]
    public function edit_page_successful(): void
    {
        $item = {model}::factory()->create();

        $response = $this->get(
            $this->getResource()->getFormPageUrl($item)
        );

        $response->assertSuccessful();
    }
}
